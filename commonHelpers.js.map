{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["`use strict`;\nimport flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst datetimePicker = document.querySelector('#datetime-picker');\nconst startButton = document.querySelector(`[data-start]`);\nconst dataDays = document.querySelector(`[data-days]`);\nconst dataHours = document.querySelector(`[data-hours]`);\nconst dataMinutes = document.querySelector(`[data-minutes]`);\nconst dataSeconds = document.querySelector(`[data-seconds]`);\n\nstartButton.disabled = true;\n\nflatpickr(datetimePicker, {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    console.log(selectedDates[0]);\n\n    if (selectedDates[0] <= new Date()) {\n      iziToast.error({\n        message: 'Please, choose a date in the future!',\n        position: 'topRight',\n      });\n    } else {\n      startButton.disabled = false;\n    }\n  },\n});\n\nstartButton.addEventListener(`click`, timer);\n\nfunction timer() {\n  startButton.disabled = true;\n  datetimePicker.disabled = true;\n  const intervalId = setInterval(() => {\n    const currantDate = new Date(datetimePicker.value);\n    let count = currantDate - new Date();\n    if (count <= 0) {\n      clearInterval(intervalId);\n      startButton.disabled = false;\n      datetimePicker.disabled = false;\n      return;\n    }\n    const { days, hours, minutes, seconds } = convertMs(count);\n    updateTimerScreen(days, hours, minutes, seconds);\n  }, 1000);\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\n// Додавання нуля спереду\nfunction addingZeroFirst(value) {\n  return String(value).padStart(2, '0');\n}\n\n// Оновлення екрану таймера\nfunction updateTimerScreen(days, hours, minutes, seconds) {\n  dataDays.textContent = addingZeroFirst(days);\n  dataHours.textContent = addingZeroFirst(hours);\n  dataMinutes.textContent = addingZeroFirst(minutes);\n  dataSeconds.textContent = addingZeroFirst(seconds);\n}\n"],"names":["datetimePicker","startButton","dataDays","dataHours","dataMinutes","dataSeconds","flatpickr","selectedDates","iziToast","timer","intervalId","count","days","hours","minutes","seconds","convertMs","updateTimerScreen","ms","addingZeroFirst","value"],"mappings":"+IAOA,MAAMA,EAAiB,SAAS,cAAc,kBAAkB,EAC1DC,EAAc,SAAS,cAAc,cAAc,EACnDC,EAAW,SAAS,cAAc,aAAa,EAC/CC,EAAY,SAAS,cAAc,cAAc,EACjDC,EAAc,SAAS,cAAc,gBAAgB,EACrDC,EAAc,SAAS,cAAc,gBAAgB,EAE3DJ,EAAY,SAAW,GAEvBK,EAAUN,EAAgB,CACxB,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQO,EAAe,CACrB,QAAQ,IAAIA,EAAc,CAAC,CAAC,EAExBA,EAAc,CAAC,GAAK,IAAI,KAC1BC,EAAS,MAAM,CACb,QAAS,uCACT,SAAU,UAClB,CAAO,EAEDP,EAAY,SAAW,EAE1B,CACH,CAAC,EAEDA,EAAY,iBAAiB,QAASQ,CAAK,EAE3C,SAASA,GAAQ,CACfR,EAAY,SAAW,GACvBD,EAAe,SAAW,GAC1B,MAAMU,EAAa,YAAY,IAAM,CAEnC,IAAIC,EADgB,IAAI,KAAKX,EAAe,KAAK,EACvB,IAAI,KAC9B,GAAIW,GAAS,EAAG,CACd,cAAcD,CAAU,EACxBT,EAAY,SAAW,GACvBD,EAAe,SAAW,GAC1B,MACD,CACD,KAAM,CAAE,KAAAY,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAK,EACzDM,EAAkBL,EAAMC,EAAOC,EAASC,CAAO,CAChD,EAAE,GAAI,CACT,CAEA,SAASC,EAAUE,EAAI,CAMrB,MAAMN,EAAO,KAAK,MAAMM,EAAK,KAAG,EAC1BL,EAAQ,KAAK,MAAOK,EAAK,MAAO,IAAI,EACpCJ,EAAU,KAAK,MAAQI,EAAK,MAAO,KAAQ,GAAM,EACjDH,EAAU,KAAK,MAASG,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAGA,SAASI,EAAgBC,EAAO,CAC9B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAGA,SAASH,EAAkBL,EAAMC,EAAOC,EAASC,EAAS,CACxDb,EAAS,YAAciB,EAAgBP,CAAI,EAC3CT,EAAU,YAAcgB,EAAgBN,CAAK,EAC7CT,EAAY,YAAce,EAAgBL,CAAO,EACjDT,EAAY,YAAcc,EAAgBJ,CAAO,CACnD"}